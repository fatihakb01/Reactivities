Some dotnet commands:
- dotnet new list = shows all dotnet templates.
- dotnet new sln = creating a solution file template.
- dotnet new webapi -n API -controllers = creating a webapi folder/template (folder called API).
- dotnet new classlib -n Application = creating an application class folder.
- dotnet new classlib -n Domain = creating a domain class folder.
- dotnet new classlib -n Persistence = creating a persistence class folder.
- dotnet sln add API = add API folder to solution file.
- dotnet sln add Application = add Application folder to solution file.
- dotnet sln add Domain = add Domain folder to solution file.
- dotnet sln add Persistence = add Persistence folder to solution file.
- dotnet run = run a dotn.
- dotnet watch = hot reload enabled.
- dotnet create gitignore = creating a gitignore file.

8. Creating a domain entity
- In the Domain folder, we created an Activity class.
- If you go to the solution explorer, then you can find <Nullable>enable</Nullable> inside Domain.csproj.
- This makes sure that uninitialized/non-nullable properties get a warning
- As a solution, you can either initialize them, or make them required.

9. Creating the Entity Framework DbContext class
- This makes sure that the application is connected to the database
- We use NuGet Gallery to install packages: Microsoft.EntityFrameworkCore.Design & Microsoft.EntityFrameworkCore.Sqlite
- In the Persistence folder, we created an AppDbContext class that inherits from DbContext.
- A DbContext instance represents a session with the database and can be used to query and save instances of your entities. 
- DbContext is a combination of the Unit Of Work and Repository patterns.
- In our case, we created an instance of Activities (from the Activity class inside the Domain folder).

10. Creating an Entity Framework migration
- Make sure to add the connection string in the appsettings.Development.json.
- dotnet ef migrations add InitialCreate -p Persistence -s API = migrating the project to the database.
- dotnet ef database update -p Persistence -s API = Create the database with the corresponding tables.
- dotnet ef database drop -p Persistence -s API = Drop the database.

12. Seeding data into the database
- async keyword makes a method asynchronous, which allows to use the await keyword
- await keyword makes sure that the thread is allowed to do other tasks, while waiting for a specific tasks

13. Using Postman to test API Endpoints
- Postman is a nice application to test API endpoints

17. Creating the React project
- npm create vite@latest = create a vit/react project
- select 'React' as a framework, 'TypeScript + SWC', follow the rest of the instructions.
- npm run dev = run the project

18. Reviewing the React project files
- vite.config.ts shows the configurations for our vite project --> added port number of 3000 in here.
- main.tsx file is the core component of this project and imports all components (e.g. index.html, index.css and App.tsx)

20. Configuring CORS on the API
- CORS = Cross-Origin Resource Sharing
- Determines how data is shared across different domains (e.g. from locaslhost:5001 to localhost:3000)

21. Creating an Activity type in TypeScript
- In the src folder, we created a lib/types folder, which contains a file called index.d.ts.
- This file defined the activity type, which is neccessary in order to resolve the error with 'activity.id' and 'activity.title'.
- To prevent typos while creating a ts file, use a tool like JSON to TypeScript.

23. Adding Material Uni
- Material UI (MUI) is an open-source React component library that implements Google's Material Design.
- We can use this library to improve our UI (things like Typography, ListItem, ListItemText, etc.)

24. Adding HTTPS support to the client application
- use the following cmd: npm install -D vite-plugin-mkcert
- In the vite.config.ts, you should specify:
    - import mkcert from 'vite-plugin-mkcert'
    - inside the plugins property: mkcert()

25. Adding Axios for data fetching
- Axios is a library to fetch data and this will be used to replace the fetch method of javascript.
- use 'npm install axios' to install axios.
